@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@model MyBlog.Models.ViewModels.ForBlogPosts.BlogDetailsRequest?
@{
    ViewBag.Title = Model?.PageTitle ?? "Page Not Found";
    Layout = "_Layout";
}

<div class="container my-5">
    <div class="row justify-content-center">
        <div class="col-12 col-lg-6">
            
            @if (Model != null) {
                <h1 class="mb-3">@Model.Heading</h1>
                <div class="d-flex justify-content-between mb-3">
                    <span class="text-secondary">@Model.Author</span>
                    <span class="text-secondary">@Model.PublishedDate.ToShortDateString()</span>
                </div>
                
                <div class="mb-3">
                    @if (SignInManager.IsSignedIn(User)) {
                        if (Model.IsLikedByCurrentUser) {
                            <a id="btnLike" style="cursor:pointer;">
                                <i class="bi bi-hand-thumbs-up-fill"></i>
                            </a>
                        }
                        else {
                            <a id="btnLike" style="cursor:pointer;">
                                <i class="bi bi-hand-thumbs-up"></i>
                            </a>
                        }
                    }
                    <span id="totalLikes">@Model.TotalLikes</span> likes 
                </div>
                
                <div class="mb-3 d-flex">
                    @foreach (var tag in @Model.Tags) {
                        <span class="badge bg-secondary me-1">@tag.Name</span>
                    }
                </div>
                
                <img src="@Model.FeaturedImageUrl" alt="@Model.Heading" class="d-block img-fluid mb-3"/>

                <div class="mb-3 blog-details-content">
                    @Html.Raw(Model.Content)
                </div>

                <div class="card">
                    <div class="card-header">
                        <h5>Comments</h5>
                        @if (SignInManager.IsSignedIn(User)) {
                            <form method="post">
                                <div class="mb-3">
                                    <label class="form-label">Comment Description</label>
                                    <input type="text" class="form-control" asp-for="CommentsDescription" required minlength="2"/>
                                    <span class="text-danger" asp-validation-for="CommentsDescription"></span>
                                </div>
                                <div class="mb-3">
                                    <button type="submit" class="btn btn-dark">Submit</button>
                                    <!--todo TRY WITHOUT THIS SHIT -->
                                    <input type="hidden" asp-for="Id"/>
                                    <input type="hidden" asp-for="UrlHandle"/>
                                    <input type="hidden" asp-for="Author"/>
                                    <input type="hidden" asp-for="Content"/>
                                    <input type="hidden" asp-for="Heading"/>
                                    <input type="hidden" asp-for="ShortDescription"/>
                                    <input type="hidden" asp-for="Tags"/>
                                    <input type="hidden" asp-for="Comments"/>
                                    <input type="hidden" asp-for="PageTitle"/>
                                    <input type="hidden" asp-for="FeaturedImageUrl"/>
                                    <input type="hidden" asp-for="PublishedDate"/>
                                    <input type="hidden" asp-for="IsVisible"/>
                                    <input type="hidden" asp-for="TotalLikes"/>
                                    <input type="hidden" asp-for="IsLikedByCurrentUser"/>
                                </div>
                            </form>
                        }
                    </div>
                </div>
                
                <div class="card-body">
                    @if (Model.Comments.Any()) {
                        @foreach (var comment in Model.Comments) {
                            <div class="card mb-3">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between">
                                        <span class="text-secondary">@comment.UserName</span>
                                        <span class="text-secondary">@comment.DateAdded.ToShortDateString()</span>
                                    </div>
                                    
                                    <div>
                                        @comment.Description
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>
            }
            else {
                <p>Blog Post Not Found Or Something Went Wrong!</p>
            }
            
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const btnLikeEl = document.getElementById('btnLike');
        const amountOfLikes = document.getElementById('totalLikes');
        let _isLikedThisPost = @Model?.IsLikedByCurrentUser.ToString().ToLower();
        
        console.log(_isLikedThisPost);
        
        //other func for getting total amount from api method by specific
        //route by Model.id, when we call this fetches - we call path firstly with
        //params or simply calling method
        //IN GET METHODS WE DONT WRITE "body: JSON.stringify({...})"
        //WHEN WE GET SOME VALS WE MUST CONVERT DATA TO JSON .then(data => data.json())
        async function getTotalLikes(){
            fetch('/api/BlogPostLike/@Model?.Id/totalLikes', {
                method: 'GET',
                headers : {
                    'Content-Type': 'application/json',
                    'Accept': '*/*'
                }
            }).then(data => data.json())
              .then(result => amountOfLikes.innerHTML = result);
        }   
        
        //func from api controller 
        async function addLikeForBlog(){
            fetch('/api/BlogPostLike/ToggleLike', {
                method: 'POST',
                headers: {
                    'Content-Type' : 'application/json',
                    'Accept' : '*/*'
                },
                //passing vars to func body
                body : JSON.stringify({ blogPostId: '@Model?.Id', 
                userId: '@UserManager.GetUserId(User)',
                isLikedThisPost: _isLikedThisPost ? 1 : 0 })
                
            }).then((response) => {
                getTotalLikes();
                
                if (response.status !== 200)
                    return;
             
                if (_isLikedThisPost){
                    _isLikedThisPost = false;
                    
                    btnLikeEl.innerHTML = '<i class="bi bi-hand-thumbs-up"></i>';
                }
                else {
                    _isLikedThisPost = true;
                    
                    btnLikeEl.innerHTML = '<i class="bi bi-hand-thumbs-up-fill"></i>';
                }
                
            });
        }
        
        btnLikeEl.addEventListener('click', addLikeForBlog);
    </script>
}
